-- Generated by Oracle SQL Developer Data Modeler 19.2.0.182.1216
--   at:        2021-01-13 16:55:30 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g

DROP TABLE adres CASCADE CONSTRAINTS;
DROP TABLE cmentarz CASCADE CONSTRAINTS;
DROP TABLE firma CASCADE CONSTRAINTS;
DROP TABLE historyczny_zakup_kwatery CASCADE CONSTRAINTS;
DROP TABLE inwestycja CASCADE CONSTRAINTS;
DROP TABLE kierownik CASCADE CONSTRAINTS;
DROP TABLE kraj CASCADE CONSTRAINTS;
DROP TABLE kwatera CASCADE CONSTRAINTS;
DROP TABLE region CASCADE CONSTRAINTS;
DROP TABLE typ_cmentarza CASCADE CONSTRAINTS;
DROP TABLE typ_kwatery CASCADE CONSTRAINTS;
DROP TABLE wlasciciel_kwatery CASCADE CONSTRAINTS;
DROP TABLE zmarly CASCADE CONSTRAINTS;

CREATE TABLE adres (
    id_adresu      NUMBER(4) NOT NULL,
    ulica          VARCHAR2(200),
    numer          VARCHAR2(6) NOT NULL,
    kod_pocztowy   VARCHAR2(50) NOT NULL,
    miejscowosc    VARCHAR2(150) NOT NULL,
    id_kraju       NUMBER(4) NOT NULL
);

ALTER TABLE adres ADD CONSTRAINT adres_pk PRIMARY KEY ( id_kraju,
                                                        id_adresu );

ALTER TABLE adres ADD CONSTRAINT adres__un UNIQUE ( id_adresu );

ALTER TABLE adres
    ADD CONSTRAINT adres__unv1 UNIQUE ( ulica,
                                        numer,
                                        kod_pocztowy,
                                        miejscowosc,
                                        id_kraju );

CREATE TABLE cmentarz (
    id_cmentarza         NUMBER(4) NOT NULL,
    nazwa                VARCHAR2(100),
    godzina_otwarcia     NUMBER(3) NOT NULL,
    godzina_zamkniecia   NUMBER(3) NOT NULL,
    id_typu_cmentarza    NUMBER(4) NOT NULL,
    id_adresu            NUMBER(4) NOT NULL,
    id_kraju             NUMBER(4) NOT NULL,
    id_kierownika        NUMBER(4) NOT NULL
);

CREATE INDEX cmentarz__idxv1 ON
    cmentarz (
        id_kierownika
    ASC );

CREATE INDEX cmentarz__idxv2 ON
    cmentarz (
        id_typu_cmentarza
    ASC );

CREATE INDEX cmentarz__idxv3v1 ON
    cmentarz (
        id_kraju
    ASC,
        id_adresu
    ASC );

ALTER TABLE cmentarz ADD CONSTRAINT cmentarz_ck_1 CHECK ( godzina_otwarcia < godzina_zamkniecia );

ALTER TABLE cmentarz ADD CONSTRAINT cmentarz_pkv1 PRIMARY KEY ( id_cmentarza );

ALTER TABLE cmentarz ADD CONSTRAINT cmentarz__un UNIQUE ( id_kraju,
                                                          id_adresu );

CREATE TABLE firma (
    id_firmy   NUMBER(4) NOT NULL,
    nazwa      VARCHAR2(200) NOT NULL,
    nip        CHAR(10)
);

ALTER TABLE firma ADD CONSTRAINT firma_pk PRIMARY KEY ( id_firmy );

CREATE TABLE historyczny_zakup_kwatery (
    id_zakupu          NUMBER(6) NOT NULL,
    data_zakupu        DATE NOT NULL,
    data_zakonczenia   DATE NOT NULL,
    id_wlasciciela     NUMBER(4) NOT NULL,
    id_kwatery         NUMBER(6) NOT NULL
);

CREATE INDEX historyczny_zakup_kwatery__idx ON
    historyczny_zakup_kwatery (
        id_kwatery
    ASC );

ALTER TABLE historyczny_zakup_kwatery ADD CONSTRAINT historyczny_zakup_kwatery_ck_1 CHECK ( data_zakupu < data_zakonczenia );

ALTER TABLE historyczny_zakup_kwatery
    ADD CONSTRAINT hist_zakup_kwatery_pkv1 PRIMARY KEY ( id_wlasciciela,
                                                         id_kwatery,
                                                         id_zakupu );

ALTER TABLE historyczny_zakup_kwatery ADD CONSTRAINT historyczny_zakup_kwatery__un UNIQUE ( id_zakupu );

CREATE TABLE inwestycja (
    id_inwestycji      NUMBER(6) NOT NULL,
    data_rozpoczecia   DATE NOT NULL,
    data_zakonczenia   DATE,
    kwota              NUMBER(11, 2),
    opis               VARCHAR2(2000),
    id_cmentarza       NUMBER(4) NOT NULL,
    id_firmy           NUMBER(4) NOT NULL
);

CREATE INDEX inwestycja__idx ON
    inwestycja (
        id_firmy
    ASC );

ALTER TABLE inwestycja
    ADD CONSTRAINT inwestycja_pk PRIMARY KEY ( id_cmentarza,
                                               id_firmy,
                                               id_inwestycji );

ALTER TABLE inwestycja ADD CONSTRAINT inwestycja__un UNIQUE ( id_inwestycji );

CREATE TABLE kierownik (
    id_kierownika   NUMBER(4) NOT NULL,
    imie            VARCHAR2(100) NOT NULL,
    nazwisko        VARCHAR2(100) NOT NULL,
    nr_telefonu     VARCHAR2(40) NOT NULL,
    "E-MAIL"        VARCHAR2(100)
);

ALTER TABLE kierownik ADD CONSTRAINT kierownik_pk PRIMARY KEY ( id_kierownika );

CREATE TABLE kraj (
    id_kraju     NUMBER(4) NOT NULL,
    nazwa        VARCHAR2(200) NOT NULL,
    id_regionu   NUMBER(4) NOT NULL
);

CREATE INDEX kraj__idx ON
    kraj (
        id_regionu
    ASC );

ALTER TABLE kraj ADD CONSTRAINT kraj_pk PRIMARY KEY ( id_kraju );

ALTER TABLE kraj ADD CONSTRAINT kraj_nazwa_un UNIQUE ( nazwa );

CREATE TABLE kwatera (
    id_kwatery            NUMBER(6) NOT NULL,
    kod_kwatery           VARCHAR2(10) NOT NULL,
    data_zakupu           DATE,
    liczba_lat_waznosci   NUMBER(5),
    id_typu_kwatery       NUMBER(4) NOT NULL,
    id_cmentarza          NUMBER(4) NOT NULL,
    id_wlasciciela        NUMBER(4)
);

CREATE INDEX kwatera__idx ON
    kwatera (
        id_typu_kwatery
    ASC );

CREATE INDEX kwatera__idxv1 ON
    kwatera (
        id_cmentarza
    ASC );

CREATE INDEX kwatera__idxv2 ON
    kwatera (
        id_wlasciciela
    ASC );

ALTER TABLE kwatera ADD CONSTRAINT kwatera_pk PRIMARY KEY ( id_kwatery );

ALTER TABLE kwatera ADD CONSTRAINT kwatera__unv2 UNIQUE ( kod_kwatery,
                                                          id_cmentarza );

CREATE TABLE region (
    id_regionu   NUMBER(4) NOT NULL,
    nazwa        VARCHAR2(100) NOT NULL
);

ALTER TABLE region ADD CONSTRAINT region_pk PRIMARY KEY ( id_regionu );

ALTER TABLE region ADD CONSTRAINT region_nazwa_un UNIQUE ( nazwa );

CREATE TABLE typ_cmentarza (
    id_typu_cmentarza   NUMBER(4) NOT NULL,
    nazwa               VARCHAR2(50) NOT NULL
);

ALTER TABLE typ_cmentarza ADD CONSTRAINT typ_cmentarza_pk PRIMARY KEY ( id_typu_cmentarza );

ALTER TABLE typ_cmentarza ADD CONSTRAINT typ_cmentarza_nazwa_un UNIQUE ( nazwa );

CREATE TABLE typ_kwatery (
    id_typu_kwatery   NUMBER(4) NOT NULL,
    nazwa             VARCHAR2(50) NOT NULL,
    stawka_roczna     NUMBER(7, 2) NOT NULL,
    ilosc_miejsc      NUMBER(3) NOT NULL
);

ALTER TABLE typ_kwatery ADD CONSTRAINT typ_kwatery_pk PRIMARY KEY ( id_typu_kwatery );

CREATE TABLE wlasciciel_kwatery (
    id_wlasciciela   NUMBER(4) NOT NULL,
    imie             VARCHAR2(100) NOT NULL,
    nazwisko         VARCHAR2(100) NOT NULL,
    pesel            CHAR(11)
);

ALTER TABLE wlasciciel_kwatery ADD CONSTRAINT wlasciciel_kwatery_pk PRIMARY KEY ( id_wlasciciela );

CREATE TABLE zmarly (
    id_zmarlego      NUMBER(4) NOT NULL,
    imie             VARCHAR2(100) NOT NULL,
    nazwisko         VARCHAR2(100) NOT NULL,
    data_urodzenia   DATE NOT NULL,
    data_smierci     DATE NOT NULL,
    data_pochowku    DATE NOT NULL,
    id_kwatery       NUMBER(6) NOT NULL
);

CREATE INDEX zmarly__idx ON
    zmarly (
        id_kwatery
    ASC );

ALTER TABLE zmarly ADD CONSTRAINT zmarly_ck_1 CHECK ( data_urodzenia <= data_smierci );

ALTER TABLE zmarly ADD CONSTRAINT zmarly_ck_2 CHECK ( data_smierci <= data_pochowku );

ALTER TABLE zmarly ADD CONSTRAINT zmarly_pk PRIMARY KEY ( id_zmarlego );

ALTER TABLE adres
    ADD CONSTRAINT adres_kraj_fk FOREIGN KEY ( id_kraju )
        REFERENCES kraj ( id_kraju );

ALTER TABLE cmentarz
    ADD CONSTRAINT cmentarz_adres_fk FOREIGN KEY ( id_kraju,
                                                   id_adresu )
        REFERENCES adres ( id_kraju,
                           id_adresu );

ALTER TABLE cmentarz
    ADD CONSTRAINT cmentarz_kierownik_fk FOREIGN KEY ( id_kierownika )
        REFERENCES kierownik ( id_kierownika );

ALTER TABLE cmentarz
    ADD CONSTRAINT cmentarz_typ_cmentarza_fk FOREIGN KEY ( id_typu_cmentarza )
        REFERENCES typ_cmentarza ( id_typu_cmentarza );

ALTER TABLE historyczny_zakup_kwatery
    ADD CONSTRAINT hist_zak_kwa_kwatera_fk FOREIGN KEY ( id_kwatery )
        REFERENCES kwatera ( id_kwatery );

ALTER TABLE historyczny_zakup_kwatery
    ADD CONSTRAINT hist_zak_kwa_wlasc_kwa_fk FOREIGN KEY ( id_wlasciciela )
        REFERENCES wlasciciel_kwatery ( id_wlasciciela );

ALTER TABLE inwestycja
    ADD CONSTRAINT inwestycja_cmentarz_fk FOREIGN KEY ( id_cmentarza )
        REFERENCES cmentarz ( id_cmentarza );

ALTER TABLE inwestycja
    ADD CONSTRAINT inwestycja_firma_fk FOREIGN KEY ( id_firmy )
        REFERENCES firma ( id_firmy );

ALTER TABLE kraj
    ADD CONSTRAINT kraj_region_fk FOREIGN KEY ( id_regionu )
        REFERENCES region ( id_regionu );

ALTER TABLE kwatera
    ADD CONSTRAINT kwatera_cmentarz_fk FOREIGN KEY ( id_cmentarza )
        REFERENCES cmentarz ( id_cmentarza );

ALTER TABLE kwatera
    ADD CONSTRAINT kwatera_typ__kwatery_fk FOREIGN KEY ( id_typu_kwatery )
        REFERENCES typ_kwatery ( id_typu_kwatery );

ALTER TABLE kwatera
    ADD CONSTRAINT kwatera_wlasciciel_kwatery_fk FOREIGN KEY ( id_wlasciciela )
        REFERENCES wlasciciel_kwatery ( id_wlasciciela );

ALTER TABLE zmarly
    ADD CONSTRAINT zmarly_kwatera_fk FOREIGN KEY ( id_kwatery )
        REFERENCES kwatera ( id_kwatery );

CREATE OR REPLACE TRIGGER fkntm_adres BEFORE
    UPDATE OF id_kraju ON adres
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table ADRES is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_cmentarz BEFORE
    UPDATE OF id_typu_cmentarza, id_kraju, id_adresu ON cmentarz
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table CMENTARZ is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_historyczny_zakup_kwater BEFORE
    UPDATE OF id_wlasciciela, id_kwatery ON historyczny_zakup_kwatery
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table HISTORYCZNY_ZAKUP_KWATERY is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_inwestycja BEFORE
    UPDATE OF id_cmentarza ON inwestycja
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table INWESTYCJA is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_kraj BEFORE
    UPDATE OF id_regionu ON kraj
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table KRAJ is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_kwatera BEFORE
    UPDATE OF id_cmentarza, id_typu_kwatery ON kwatera
BEGIN
    raise_application_error(-20225, 'Non Transferable FK constraint  on table KWATERA is violated');
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            13
-- CREATE INDEX                            10
-- ALTER TABLE                             39
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           6
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
